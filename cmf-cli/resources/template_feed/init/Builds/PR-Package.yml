# Critical Manufacturing Framework Pull Request Package Pipeline
# dependsOn:
#             - cmf pipeline
#             - cmf cli

pool:
  name: <%= $CLI_PARAM_AgentPool %>
//#if (agentType == "Cloud")
  vmImage: 'ubuntu-latest'
//#endif

# A pipeline with no CI trigger
trigger: none

# A pipeline with no PR trigger
pr: none

parameters:
- name: packages
  type: object

variables:
 - template: ../EnvironmentConfigs/GlobalVariables.yml  # Template reference to global variables

workspace:
  clean: all

name: $(Build.SourceBranchName)_$(Build.DefinitionName).$(Build.BuildId)
steps:
- checkout: self

# install cmf-pipeline
- template: .tasks/install-cmf-pipeline.yml

- ${{ each package in parameters.packages }}:
  # package existsInRepos
  - pwsh: $(CmfPipelinePath)/cmf-pipeline package existsInRepos --repo $(ApprovedPackages)
    displayName: Check if ${{ package.packageId }}@${{ package.version }} was not released
    workingDirectory: ${{ package.path }}

# set node version
- template: .tasks/use-node-version.yml

# set dotnet version
- template: .tasks/use-dotnet-version.yml

# install cmf-cli
- template: .tasks/install-cli.yml

# install dotnet tools
- script: 'dotnet tool restore'
  displayName: 'Restore .NET tools'

- ${{ each package in parameters.packages }}:
  # cmf build
  - pwsh: $(CmfCliPath)/cmf build --test
    displayName: Build ${{ package.packageId }} @ ${{ package.path }}
    workingDirectory: ${{ package.path }}
  
# Publish test and coverage results
- template: .tasks/publish-tests.yml
  parameters:
    path: $(build.sourcesdirectory)

# Clean Agent Directories
- template: .tasks/clean-agent-directories.yml