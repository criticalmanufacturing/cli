# Critical Manufacturing Framework Pull Request Package detection pipeline
# dependsOn:
#             - cmf pipeline

pool:
  name: <%= $CLI_PARAM_AgentPool %>
//#if (agentType == "Cloud")
  vmImage: 'ubuntu-latest'
//#endif

# A pipeline with no CI trigger
trigger: none

# A pipeline with no PR trigger
pr: none

variables:
- template: ../EnvironmentConfigs/GlobalVariables.yml  # Template reference to global variables
- name: Pipeline
  value: <%= $CLI_PARAM_PipelinesFolder %>\PR-Builds\PR-Package

workspace:
  clean: all

name: $(Build.SourceBranchName)_$(Build.DefinitionName).$(Build.BuildId)
steps:
- checkout: self
  persistCredentials: true

# set node version
- template: .tasks/use-node-version.yml

# install cmf-pipeline
- template: .tasks/install-cmf-pipeline.yml

# find changes and trigger pr-package build
- pwsh: |
    $targetBranchName = $("$(System.PullRequest.TargetBranch)" -split "/")[-1]
    $(CmfPipelinePath)/cmf-pipeline repo findChangedPackages --targetType Git --target remotes/origin/$targetBranchName --triggerAzureDevOpsPipeline $(Pipeline)
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    CMF_PIPELINE_WAIT_FOR_BUILD_FINISH: true
    CMF_PIPELINE_WAIT_FOR_BUILD_FINISH_REFRESH_TIME: 30
  displayName: Find changed packages and trigger $(Pipeline)
  name: FindChangedPackages

# cancel triggered pipeline if canceled
- pwsh: $(CmfPipelinePath)/cmf-pipeline azureDevOps pipeline cancel --pipeline $(Pipeline) --pipelineRunId $(FindChangedPackages.Cmf.Pipeline.Triggered.Build.Id)
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  displayName: Cancel $(Pipeline) if $(Build.DefinitionName) is cancelled
  condition: canceled()

# Clean Agent Directories
- template: .tasks/clean-agent-directories.yml