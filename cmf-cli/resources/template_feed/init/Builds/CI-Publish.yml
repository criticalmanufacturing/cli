# Critical Manufacturing Framework Continuous Integration Package Pipeline
# dependsOn:
#             - cmf cli
pool:
  name: <%= $CLI_PARAM_AgentPool %>
//#if (agentType == "Cloud")
  vmImage: 'ubuntu-latest'
//#endif

# A pipeline with no CI trigger
trigger: none

# A pipeline with no PR trigger
pr: none

schedules:
  - cron: "0 2 * * Mon-Fri"
    displayName: Daily build # friendly name given to a specific schedule
    branches:
      include: # which branches the schedule applies to
        - development
      # exclude: [ string ] # which branches to exclude from the schedule
    always: false # whether to always run the pipeline or only if there have been source code changes since the last run. The default is false.

variables:
 - template: ../EnvironmentConfigs/GlobalVariables.yml  # Template reference to global variables
 - name: packageDir
   value: $(Build.ArtifactStagingDirectory)/Package
 - name: configurationDir
   value: $(Build.ArtifactStagingDirectory)/Configurations
 - name: publishPath
   value: $(CIPublishArtifacts)/$(Build.SourceBranchName)/$(Build.DefinitionName)

workspace:
  clean: all

name: $(Build.SourceBranchName)_$(Build.DefinitionName).$(Build.BuildId)
steps:
- checkout: self
  persistCredentials: true

# install cmf-cli
- template: .tasks/install-cli.yml

# cmf assemble
- pwsh: $(CmfCliPath)/cmf assemble --includeTestPackages --outputDir $(packageDir)
  workingDirectory: $(Build.SourcesDirectory)
  displayName: Assemble

# Get package details
- template: .tasks/load-root-package-details.yml

# Configuration Artifact
- template: .tasks/copy-configurations-files.yml
  parameters:
    configurationDir: $(configurationDir)
    packageDir: $(packageDir)

# Publish Configurations Artifact
- task: PublishBuildArtifacts@1
  displayName: Publish Configurations Artifact
  inputs:
    PathtoPublish: $(configurationDir)
    ArtifactName: Configurations
    publishLocation: FilePath
    TargetPath: "$(publishPath)_$(Package.Version).$(Build.BuildId)"

# Publish tests Artifact
- task: PublishBuildArtifacts@1
  displayName: Publish Test Artifact
  inputs:
    PathtoPublish: $(packageDir)/Tests
    ArtifactName: Tests
    publishLocation: FilePath
    TargetPath: "$(publishPath)_$(Package.Version).$(Build.BuildId)"

# Remove Tests Source Folder
- task: DeleteFiles@1
  displayName: Remove Tests Source Folder
  inputs:
    SourceFolder: FinalPackage/Tests
    Contents: |
      **
    RemoveSourceFolder: true

# Publish Package Artifact
- task: PublishBuildArtifacts@1
  displayName: Publish Package Artifact
  inputs:
    PathtoPublish: $(packageDir)
    ArtifactName: Package
    publishLocation: FilePath
    TargetPath: "$(publishPath)_$(Package.Version).$(Build.BuildId)"

# Clean Agent Directories
- template: .tasks/clean-agent-directories.yml