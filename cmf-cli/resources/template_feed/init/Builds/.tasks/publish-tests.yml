parameters:
  Path: ''

steps:
- pwsh: |
    $count = (Get-ChildItem -Path ".\**\coverage.cobertura.xml" -Recurse | Measure-Object).Count
    if ($count -gt 0) {
      Write-Host "##vso[task.setvariable variable=generateCoverageReport]Yes" #set variable doThing to Yes
    }
  displayName: Check if reportgenerator is to be executed

# install dotnet tools
- pwsh: dotnet tool restore
  displayName: Restore .NET tools

# run dotnet-coverage
- pwsh: dotnet tool run dotnet-coverage merge -o "${{ parameters.Path }}/Merged.Cobertura.xml" -f "Cobertura" -r "coverage.cobertura.xml"
  displayName: Run reportgenerator
  condition: and(succeeded(), eq(variables.generateCoverageReport, 'Yes'))

# Publish test results
- task: PublishTestResults@2
  displayName: Publish Test Results
  condition: always()
  inputs:
    testRunner: VSTest
    testResultsFiles: '${{ parameters.Path }}/**/*.trx'

# Publish Code Coverage
- task: PublishCodeCoverageResults@1
  displayName: Publishing Code Coverage
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '${{ parameters.Path }}/Merged.Cobertura.xml'