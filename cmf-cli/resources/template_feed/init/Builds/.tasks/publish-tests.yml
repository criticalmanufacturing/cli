parameters:
- name: path # name of the parameter; required
  type: string # data type of the parameter; required
  default: false

steps:
- task: PowerShell@2
  displayName: 'Check if reportgenerator is to be executed'
  inputs:
    targetType: 'inline'
    script: |
      $count = (Get-ChildItem -Path ".\**\coverage.cobertura.xml" -Recurse | Measure-Object).Count
      if ($count -gt 0) {
        Write-Host "##vso[task.setvariable variable=generateCoverageReport]Yes" #set variable doThing to Yes
      }

- script: 'dotnet tool run dotnet-coverage merge -o "${{ parameters.path }}/Merged.Cobertura.xml" -f "Cobertura" -r "coverage.cobertura.xml"'
  displayName: 'Run reportgenerator'
  condition: and(succeeded(), eq(variables.generateCoverageReport, 'Yes'))

# Publish test results
- task: PublishTestResults@2
  displayName: Publish Test Results
  condition: always()
  inputs:
    testRunner: VSTest
    testResultsFiles: '${{ parameters.PackagePath }}/**/*.trx'

# Publish Code Coverage
- task: PublishCodeCoverageResults@1
  displayName: Publishing Code Coverage
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '${{ parameters.path }}/Merged.Cobertura.xml'
