<?xml version="1.0"?>
<doc>
    <assembly>
        <name>cmf</name>
    </assembly>
    <members>
        <member name="T:Cmf.Common.Cli.Attributes.CmfCommandAttribute">
             <summary>
            
             </summary>
             <seealso cref="T:System.Attribute" />
        </member>
        <member name="P:Cmf.Common.Cli.Attributes.CmfCommandAttribute.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Attributes.CmfCommandAttribute.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="M:Cmf.Common.Cli.Attributes.CmfCommandAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Attributes.CmfCommandAttribute" /> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Builders.CmdCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Builders.ProcessCommand" />
             <seealso cref="T:Cmf.Common.Cli.Builders.IBuildCommand" />
        </member>
        <member name="P:Cmf.Common.Cli.Builders.CmdCommand.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.CmdCommand.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.CmdCommand.Args">
            <summary>
            Gets or sets the arguments.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="M:Cmf.Common.Cli.Builders.CmdCommand.GetSteps">
            <summary>
            Gets the steps.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Builders.DotnetCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Builders.ProcessCommand" />
             <seealso cref="T:Cmf.Common.Cli.Builders.IBuildCommand" />
        </member>
        <member name="P:Cmf.Common.Cli.Builders.DotnetCommand.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.DotnetCommand.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.DotnetCommand.Args">
            <summary>
            Gets or sets the arguments.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.DotnetCommand.NuGetConfig">
            <summary>
            Gets or sets the nu get configuration.
            </summary>
            <value>
            The nu get configuration.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.DotnetCommand.Solution">
            <summary>
            Gets or sets the solution.
            </summary>
            <value>
            The solution.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.DotnetCommand.OutputDirectory">
            <summary>
            Gets or sets the output directory.
            </summary>
            <value>
            The output directory.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.DotnetCommand.Configuration">
            <summary>
            Gets or sets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="M:Cmf.Common.Cli.Builders.DotnetCommand.GetSteps">
            <summary>
            Gets the steps.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Builders.ExecuteCommand`1">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <seealso cref="T:Cmf.Common.Cli.Builders.IBuildCommand" />
        </member>
        <member name="P:Cmf.Common.Cli.Builders.ExecuteCommand`1.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.ExecuteCommand`1.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.ExecuteCommand`1.Execute">
            <summary>
            Gets or sets the execute.
            </summary>
            <value>
            The execute.
            </value>
        </member>
        <member name="M:Cmf.Common.Cli.Builders.ExecuteCommand`1.Exec">
            <summary>
            Executes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Builders.GulpCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Builders.ProcessCommand" />
             <seealso cref="T:Cmf.Common.Cli.Builders.IBuildCommand" />
        </member>
        <member name="P:Cmf.Common.Cli.Builders.GulpCommand.GulpFile">
            <summary>
            Gets or sets the gulp file.
            </summary>
            <value>
            The gulp file.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.GulpCommand.Task">
            <summary>
            Gets or sets the task.
            </summary>
            <value>
            The task.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.GulpCommand.GulpJS">
            <summary>
            Gets or sets the gulp js.
            </summary>
            <value>
            The gulp js.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.GulpCommand.Args">
            <summary>
            Gets or sets the arguments.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.GulpCommand.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="M:Cmf.Common.Cli.Builders.GulpCommand.GetSteps">
            <summary>
            Gets the steps.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Builders.IBuildCommand">
             <summary>
            
             </summary>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.IBuildCommand.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="M:Cmf.Common.Cli.Builders.IBuildCommand.Exec">
            <summary>
            Executes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Builders.NPMCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Builders.ProcessCommand" />
             <seealso cref="T:Cmf.Common.Cli.Builders.IBuildCommand" />
        </member>
        <member name="P:Cmf.Common.Cli.Builders.NPMCommand.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.NPMCommand.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.NPMCommand.Args">
            <summary>
            Gets or sets the arguments.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="M:Cmf.Common.Cli.Builders.NPMCommand.GetSteps">
            <summary>
            Gets the steps.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Builders.ProcessBuildStep">
             <summary>
            
             </summary>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.ProcessBuildStep.Args">
            <summary>
            Gets or sets the arguments.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.ProcessBuildStep.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.ProcessBuildStep.WorkingDirectory">
            <summary>
            Gets or sets the working directory.
            </summary>
            <value>
            The working directory.
            </value>
        </member>
        <member name="T:Cmf.Common.Cli.Builders.ProcessCommand">
             <summary>
            
             </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Builders.ProcessCommand.fileSystem">
            <summary>
            the undrlying file system
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.Builders.ProcessCommand.WorkingDirectory">
            <summary>
            Gets or sets the working directory.
            </summary>
            <value>
            The working directory.
            </value>
        </member>
        <member name="M:Cmf.Common.Cli.Builders.ProcessCommand.Exec">
            <summary>
            Executes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Builders.ProcessCommand.GetSteps">
            <summary>
            Gets the steps.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.CliMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.CliMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.CliMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.CliMessages.ContentToPackNotFound">
            <summary>
              Looks up a localized string similar to Nothing was found on ContentToPack Sources of {0}.{1}.
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.CliMessages.InvalidManifestFile">
            <summary>
              Looks up a localized string similar to It was not possible to read the manifest file..
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.CliMessages.InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid {0}, Property {1} doesn&apos;t have the expected value: {2}.
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.CliMessages.MissingMandatoryDependency">
            <summary>
              Looks up a localized string similar to Mandatory Dependency {0}.{1} not found.
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.CliMessages.MissingMandatoryProperties">
            <summary>
              Looks up a localized string similar to Missing mandatory properties: {0}.
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.CliMessages.MissingMandatoryProperty">
            <summary>
              Looks up a localized string similar to Missing mandatory property {0}.
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.CliMessages.MissingMandatoryPropertyInFile">
            <summary>
              Looks up a localized string similar to Missing mandatory property {0} in file {1}.
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.CliMessages.NotFound">
            <summary>
              Looks up a localized string similar to {0} not found!.
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.CliMessages.PackageRootNotFound">
            <summary>
              Looks up a localized string similar to Cannot find package root. Are you in a valid package directory?.
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.CliMessages.UrlsNotSupported">
            <summary>
              Looks up a localized string similar to Urls not supported yet.
            </summary>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.BaseCommand">
             <summary>
            
             </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Commands.BaseCommand.fileSystem">
            <summary>
            The underlying filesystem
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BaseCommand.#ctor">
            <summary>
            constructor for System.IO filesystem
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BaseCommand.#ctor(System.IO.Abstractions.IFileSystem)">
            <summary>
            constructor
            </summary>
            <param name="fileSystem"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BaseCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BaseCommand.AddChildCommands(System.CommandLine.Command)">
            <summary>
            Register all available commands, identified using the CmfCommand attribute.
            </summary>
            <param name="command">Command to which commands will be added</param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BaseCommand.AddPluginCommands(System.CommandLine.Command)">
            <summary>
            Adds the plugin commands.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BaseCommand.FindChildCommands(System.Type,System.Collections.Generic.List{System.Type})">
            <summary>
            Finds the child commands.
            </summary>
            <param name="cmd">The command.</param>
            <param name="commandTypes">The command types.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BaseCommand.Parse``1(System.CommandLine.Parsing.ArgumentResult,System.String)">
            <summary>
            parse argument/option
            </summary>
            <typeparam name="T">the (target) type of the argument/parameter</typeparam>
            <param name="argResult">the arguments to parse</param>
            <param name="default">the default value if no value is passed for the argument</param>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.BuildCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.BaseCommand" />
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BuildCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BuildCommand.Execute(System.IO.DirectoryInfo)">
            <summary>
            Executes the specified package path.
            </summary>
            <param name="packagePath">The package path.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.GenerateBasedOnTemplatesCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.PowershellCommand" />
        </member>
        <member name="M:Cmf.Common.Cli.Commands.GenerateBasedOnTemplatesCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.GenerateBasedOnTemplatesCommand.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.GenerateBasedOnTemplatesCommand.GetPowershellScript">
            <summary>
            Gets the powershell script.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.GenerateMenuItemsCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.PowershellCommand" />
        </member>
        <member name="M:Cmf.Common.Cli.Commands.GenerateMenuItemsCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.GenerateMenuItemsCommand.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.GenerateMenuItemsCommand.GetPowershellScript">
            <summary>
            Gets the powershell script.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.HelpCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.BaseCommand" />
        </member>
        <member name="M:Cmf.Common.Cli.Commands.HelpCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.BumpCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.BaseCommand" />
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BumpCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BumpCommand.Execute(System.IO.DirectoryInfo,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Executes the specified package path.
            </summary>
            <param name="packagePath">The package path.</param>
            <param name="version">The version.</param>
            <param name="buildNr">The version for build Nr.</param>
            <param name="root">The root.</param>
            <param name="all">if set to <c>true</c> [all].</param>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException"></exception>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException"></exception>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BumpCommand.Execute(Cmf.Common.Cli.Objects.CmfPackage,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Executes the specified CMF package.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
            <param name="version">The version.</param>
            <param name="buildNr">The version for build Nr.</param>
            <param name="root">The root.</param>
            <param name="all">if set to <c>true</c> [all].</param>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException"></exception>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.BumpIoTCommand">
            <summary>
            iot command group
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BumpIoTCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command (no-op, command is a group only)
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.BumpIoTConfigurationCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.BumpCommand" />
             <seealso cref="T:Cmf.Common.Cli.Commands.BaseCommand" />
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BumpIoTConfigurationCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BumpIoTConfigurationCommand.Execute(System.IO.Abstractions.IDirectoryInfo,System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Executes the specified package directory.
            </summary>
            <param name="path">The package directory.</param>
            <param name="version">The version.</param>
            <param name="buildNr"></param>
            <param name="isToBumpMasterdata">if set to <c>true</c> [is to bump masterdata].</param>
            <param name="isToBumpIoT">if set to <c>true</c> [is to bump io t].</param>
            <param name="packageNames">The package names.</param>
            <param name="root">The root.</param>
            <param name="group">The group.</param>
            <param name="workflowName">Name of the workflow.</param>
            <param name="isToTag">if set to <c>true</c> [is to tag].</param>
            <param name="onlyMdCustomization">if set to <c>true</c> [only md customization].</param>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.BumpIoTCustomizationCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.BaseCommand" />
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BumpIoTCustomizationCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BumpIoTCustomizationCommand.Execute(System.IO.Abstractions.IDirectoryInfo,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Executes the specified package path.
            </summary>
            <param name="packagePath">The package path.</param>
            <param name="version">The version.</param>
            <param name="buildNr"></param>
            <param name="packageNames">The package names.</param>
            <param name="isToTag">if set to <c>true</c> [is to tag].</param>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException"></exception>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException"></exception>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.BumpIoTCustomizationCommand.Execute(Cmf.Common.Cli.Objects.CmfPackage,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Executes the BumpIoTCustomPackages for specified CMF package.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
            <param name="version">The version.</param>
            <param name="buildNr"></param>
            <param name="packageNames">The package names.</param>
            <param name="isToTag">if set to <c>true</c> [is to tag].</param>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException"></exception>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.ListDependenciesCommand">
            <summary>
            List dependencies command
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.ListDependenciesCommand.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.ListDependenciesCommand.#ctor(System.IO.Abstractions.IFileSystem)">
            <summary>
            constructor
            </summary>
            <param name="fileSystem"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.ListDependenciesCommand.Configure(System.CommandLine.Command)">
            <summary>
            configure command signature
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.ListDependenciesCommand.Execute(System.IO.Abstractions.IDirectoryInfo,System.String)">
            <summary>
            Execute the command
            </summary>
            <param name="workingDir"></param>
            <param name="repo"></param>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.GenerateLBOsCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.PowershellCommand" />
        </member>
        <member name="M:Cmf.Common.Cli.Commands.GenerateLBOsCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.GenerateLBOsCommand.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.GenerateLBOsCommand.GetPowershellScript">
            <summary>
            Gets the powershell script.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.GetLocalEnvironmentCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.PowershellCommand" />
        </member>
        <member name="M:Cmf.Common.Cli.Commands.GetLocalEnvironmentCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.GetLocalEnvironmentCommand.Execute(System.IO.DirectoryInfo)">
            <summary>
            Executes the specified target.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.GetLocalEnvironmentCommand.GetPowershellScript">
            <summary>
            Gets the powershell script.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.LocalCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.BaseCommand" />
        </member>
        <member name="M:Cmf.Common.Cli.Commands.LocalCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.PackCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.BaseCommand" />
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PackCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PackCommand.Execute(System.IO.Abstractions.IDirectoryInfo,System.IO.Abstractions.IDirectoryInfo,System.String,System.Boolean,System.Boolean)">
            <summary>
            Executes the specified working dir.
            </summary>
            <param name="workingDir">The working dir.</param>
            <param name="outputDir">The output dir.</param>
            <param name="repo">The repo.</param>
            <param name="force">if set to <c>true</c> [force].</param>
            <param name="skipDependencies"></param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PackCommand.Execute(Cmf.Common.Cli.Objects.CmfPackage,System.IO.Abstractions.IDirectoryInfo,System.Uri,Cmf.Common.Cli.Objects.CmfPackageCollection,System.Boolean,System.Boolean)">
            <summary>
            Executes the specified CMF package.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
            <param name="outputDir">The output dir.</param>
            <param name="repoUri">The repo URI.</param>
            <param name="loadedPackages">The loaded packages.</param>
            <param name="force">if set to <c>true</c> [force].</param>
            <param name="skipDependencies"></param>
            <returns></returns>
            <exception cref="T:Cmf.Common.Cli.Objects.CmfPackageCollection">
            </exception>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.PluginCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.BaseCommand" />
        </member>
        <member name="F:Cmf.Common.Cli.Commands.PluginCommand.commandName">
            <summary>
            The command name
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Commands.PluginCommand.commandPath">
            <summary>
            The command path
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PluginCommand.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Commands.PluginCommand"/> class.
            </summary>
            <param name="commandName">Name of the command.</param>
            <param name="commandPath">The command path.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PluginCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PluginCommand.Execute(System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>
            Executes the plugin with the supplied parameters
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.PowershellCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.BaseCommand" />
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PowershellCommand.GetRunspace(System.String)">
            <summary>
            Gets the a remote pwsh runspace.
            </summary>
            <param name="hostname">The hostname.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PowershellCommand.ExecutePwshScriptAsync(System.Collections.IDictionary,System.String,System.String)">
            <summary>
            Executes the PWSH script asynchronously.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="script">The script.</param>
            <param name="hostname">The hostname.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PowershellCommand.ExecutePwshScriptSync(System.Collections.IDictionary,System.String,System.String)">
            <summary>
            Executes the PWSH script synchronously.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="script">The script.</param>
            <param name="hostname">The hostname.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PowershellCommand.GetPowershellScript">
            <summary>
            Gets the powershell script.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Commands.PublishCommand">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Commands.BaseCommand" />
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PublishCommand.PublishDependenciesFromPackage(System.IO.Abstractions.IDirectoryInfo,System.Uri,System.String,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Publish Dependencies from one package. recursive operation
            </summary>
            <param name="outputDir">Destination for the dependencies package and also used for the current package</param>
            <param name="repoUri">Source Location where the package dependencies should be downloaded</param>
            <param name="packageId">Source Package ID</param>
            <param name="packageVersion">Source Package Version</param>
            <param name="loadedPackages">List of packages already processed.</param>
            <param name="publishTests">True to publish test packages</param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PublishCommand.PublishPackageToOutput(System.IO.Abstractions.IDirectoryInfo,System.Uri,System.String,System.String)">
            <summary>
            Publish a package to the output directory
            </summary>
            <param name="outputDir">Destiny for the package</param>
            <param name="repoUri">Source Location where the package should be downloaded</param>
            <param name="packageId">Package Id to publish</param>
            <param name="packageVersion">Package version to publish</param>
            <returns>True if package was coppied </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PublishCommand.Configure(System.CommandLine.Command)">
            <summary>
            Configure command
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PublishCommand.Execute(System.IO.Abstractions.IDirectoryInfo,System.IO.Abstractions.IDirectoryInfo,System.String,System.Boolean)">
            <summary>
            Executes the specified working dir.
            </summary>
            <param name="workingDir">The working dir.</param>
            <param name="outputDir">The output dir.</param>
            <param name="repo">The repo.</param>
            <param name="publishTests">True to publish test packages</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Commands.PublishCommand.Execute(Cmf.Common.Cli.Objects.CmfPackage,System.IO.Abstractions.IDirectoryInfo,System.Uri,System.Boolean)">
            <summary>
            Executes the specified CMF package.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
            <param name="outputDir">The output dir.</param>
            <param name="repoUri">The repo URI.</param>
            <param name="publishTests">True to publish test packages</param>
            <returns></returns>
            <exception cref="T:Cmf.Common.Cli.Objects.CmfPackageCollection">
            </exception>
        </member>
        <member name="T:Cmf.Common.Cli.Constants.CliConstants">
             <summary>
            
             </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.FolderTemplates">
            <summary>
            The folder templates
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.FolderInstallDependencies">
            <summary>
            The folder install dependencies
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.DeploymentFrameworkManifestFileName">
            <summary>
            The deployment framework manifest template
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.CmfPackageFileName">
            <summary>
            The CMF package file name
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.CmfPackagePresentationConfig">
            <summary>
            The CMF package default presentation configuration
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.PackageJson">
            <summary>
            The package json
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.ProjectConfigFileName">
            <summary>
            The project config file name, located in the project root
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.LBOsFileLocation">
            <summary>
            The lb os file location
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.Driver">
            <summary>
            Driver keyword for IoT Packages
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.RootPackageDefaultKeyword">
            <summary>
            The root package default keyword
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.DeploymentMetadataDependency">
            <summary>
            The deployment metadata dependency
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.TokenStartElement">
            <summary>
            The token start element
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.TokenEndElement">
            <summary>
            The token end element
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.TokenXmlInjection">
            <summary>
            The token XML injection
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.TokenPackagesToRemove">
            <summary>
            The token packages to remove
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.TokenPackagesToAdd">
            <summary>
            The token packages to add
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.TokenVersion">
            <summary>
            The token version
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.TokenJDTInjection">
            <summary>
            The token for JDT injection
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Constants.CliConstants.TokenPackageId">
            <summary>
            The token package identifier
            </summary>
        </member>
        <member name="T:Cmf.Common.Cli.Enums.ContentType">
             <summary>
            
             </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.ContentType.Generic">
            <summary>
            The generic
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.ContentType.MasterData">
            <summary>
            The master data
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.ContentType.ProcessRulesPre">
            <summary>
            The process rules pre
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.ContentType.ProcessRulesPost">
            <summary>
            The process rules post
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.ContentType.EntityTypes">
            <summary>
            The entity types
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.ContentType.ChecklistImages">
            <summary>
            The checklist images
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.ContentType.DEE">
            <summary>
            The dee
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.ContentType.Documents">
            <summary>
            The documents
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.ContentType.Maps">
            <summary>
            The maps
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.ContentType.AutomationWorkFlows">
            <summary>
            The automation work flows
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.ContentType.ExportedObjects">
            <summary>
            The exported objects
            </summary>
        </member>
        <member name="T:Cmf.Common.Cli.Enums.MessageType">
             <summary>
            
             </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.MessageType.ImportObject">
            <summary>
            The import object
            </summary>
        </member>
        <member name="T:Cmf.Common.Cli.Enums.PackAction">
            <summary>
            The action to apply to the content specified to be packed
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackAction.Pack">
            <summary>
            pack the source content into the package
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackAction.Transform">
            <summary>
            Use the source content to apply a transformation to another file
            This currently doesn't use the Target property, as it is handler dependent
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackAction.Untar">
            <summary>
            Use the source content to apply untar the file to a target destination
            This currently handler dependent (IoT Package)
            </summary>
        </member>
        <member name="T:Cmf.Common.Cli.Enums.PackageLocation">
            <summary>
            Possible source for a CmfPackage
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageLocation.Local">
            <summary>
            Local filesystem
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageLocation.Repository">
            <summary>
            a specified repository
            </summary>
        </member>
        <member name="T:Cmf.Common.Cli.Enums.PackageType">
             <summary>
            
             </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.Generic">
            <summary>
            The metadata
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.Business">
            <summary>
            The business
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.Root">
            <summary>
            The root
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.Data">
            <summary>
            The global data
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.Presentation">
            <summary>
            The presentation
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.Html">
            <summary>
            The HTML
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.Help">
            <summary>
            The help
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.IoT">
            <summary>
            The iot
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.Reporting">
            <summary>
            The reporting
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.ExportedObjects">
            <summary>
            The exported objects
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.Database">
            <summary>
            The database
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.IoTData">
            <summary>
            The IoT Data
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.PackageType.Test">
            <summary>
            The test
            </summary>
        </member>
        <member name="T:Cmf.Common.Cli.Enums.StepType">
             <summary>
            
             </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.StepType.Generic">
            <summary>
            The generic
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.StepType.DeployFiles">
            <summary>
            The deploy files
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.StepType.TransformFile">
            <summary>
            The transform file
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.StepType.RunSql">
            <summary>
            The run SQL
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.StepType.DeployReports">
            <summary>
            The run SQL
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.StepType.ProcessRules">
            <summary>
            The process rules
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.StepType.MasterData">
            <summary>
            The master data
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.StepType.ExportedObjects">
            <summary>
            The exported objects
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.StepType.CreateIntegrationEntries">
            <summary>
            The create integration entries
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Enums.StepType.EnqueueSql">
            <summary>
            The enqueue SQL
            </summary>
        </member>
        <member name="T:Cmf.Common.Cli.Factories.PackageTypeFactory">
             <summary>
            
             </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Factories.PackageTypeFactory.GetPackageTypeHandler(System.IO.Abstractions.IFileInfo,System.Boolean)">
            <summary>
            Gets the package type handler.
            </summary>
            <param name="file">The file.</param>
            <param name="setDefaultValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Factories.PackageTypeFactory.GetPackageTypeHandler(Cmf.Common.Cli.Objects.CmfPackage,System.Boolean)">
            <summary>
            Gets the package type handler.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
            <param name="setDefaultValues">if set to <c>true</c> [set default values].</param>
            <returns></returns>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException">
            </exception>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.BusinessPackageTypeHandler">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Handlers.PackageTypeHandler" />
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.BusinessPackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.BusinessPackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.BusinessPackageTypeHandler.Bump(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Bumps the specified CMF package.
            </summary>
            <param name="version">The version.</param>
            <param name="buildNr">The version for build Nr.</param>
            <param name="bumpInformation">The bump information.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.DatabasePackageTypeHandler">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Handlers.PackageTypeHandler" />
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.DatabasePackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.DatabasePackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.DataPackageTypeHandler">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Handlers.PackageTypeHandler" />
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.DataPackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.DataPackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.DataPackageTypeHandler.CopyInstallDependencies(System.IO.Abstractions.IDirectoryInfo)">
            <summary>
            Copies the install dependencies.
            </summary>
            <param name="packageOutputDir">The package output dir.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.ExportedObjectsPackageTypeHandler">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Handlers.PackageTypeHandler" />
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.ExportedObjectsPackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.ExportedObjectsPackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.GenericPackageTypeHandler">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Handlers.PackageTypeHandler" />
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.GenericPackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.GenericPackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.HelpPackageTypeHandler">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Handlers.PresentationPackageTypeHandler" />
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.HelpPackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.HelpPackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage"></param>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.HtmlPackageTypeHandler">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Handlers.PresentationPackageTypeHandler" />
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.HtmlPackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.HtmlPackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage"></param>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.IoTDataPackageTypeHandler">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Handlers.DataPackageTypeHandler" />
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.IoTDataPackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.DataPackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.IoTDataPackageTypeHandler.Bump(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Bumps the specified CMF package.
            </summary>
            <param name="version">The version.</param>
            <param name="buildNr">The version for build Nr.</param>
            <param name="bumpInformation">The bump information.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.IoTPackageTypeHandler">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Handlers.PresentationPackageTypeHandler" />
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.IoTPackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.IoTPackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.IoTPackageTypeHandler.CopyInstallDependencies(System.IO.Abstractions.IDirectoryInfo)">
            <summary>
            Copies the install dependencies.
            </summary>
            <param name="packageOutputDir">The package output dir.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.IoTPackageTypeHandler.Bump(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Bumps the specified CMF package.
            </summary>
            <param name="version">The version.</param>
            <param name="buildNr">The version for build Nr.</param>
            <param name="bumpInformation">The bump information.</param>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException"></exception>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.IoTPackageTypeHandler.Pack(System.IO.Abstractions.IDirectoryInfo,System.IO.Abstractions.IDirectoryInfo)">
            <summary>
            Packs the specified package output dir.
            </summary>
            <param name="packageOutputDir">The package output dir.</param>
            <param name="outputDir">The output dir.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.PackageTypeHandler">
             <summary>
            
             </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Handlers.PackageTypeHandler.fileSystem">
            <summary>
            the underlying file system
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Handlers.PackageTypeHandler.CmfPackage">
            <summary>
            The CMF package
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Handlers.PackageTypeHandler.BuildSteps">
            <summary>
            Gets or sets the build steps.
            </summary>
            <value>
            The build steps.
            </value>
        </member>
        <member name="F:Cmf.Common.Cli.Handlers.PackageTypeHandler.FilesToPack">
            <summary>
            The files to pack
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Handlers.PackageTypeHandler.DFPackageType">
            <summary>
            The df package type
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.Handlers.PackageTypeHandler.DefaultContentToIgnore">
            <summary>
            Gets or sets the default content to ignore.
            </summary>
            <value>
            The default content to ignore.
            </value>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.PackageTypeHandler" /> class.
            </summary>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException"></exception>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage,System.IO.Abstractions.IFileSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.PackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage"></param>
            <param name="fileSystem"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PackageTypeHandler.GenerateDeploymentFrameworkManifest(System.IO.Abstractions.IDirectoryInfo)">
            <summary>
            Generates the deployment framework manifest.
            </summary>
            <param name="packageOutputDir">The package output dir.</param>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException"></exception>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PackageTypeHandler.GetContentToIgnore(Cmf.Common.Cli.Objects.ContentToPack,System.IO.Abstractions.IDirectoryInfo,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the content to ignore.
            </summary>
            <param name="contentToPack">The content to pack.</param>
            <param name="packDirectory">The pack directory.</param>
            <param name="defaultContentToIgnore">The default content to ignore.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PackageTypeHandler.FinalArchive(System.IO.Abstractions.IDirectoryInfo,System.IO.Abstractions.IDirectoryInfo)">
            <summary>
            Final Archive the package
            </summary>
            <param name="packageOutputDir">The pack directory.</param>
            <param name="outputDir">The Output directory.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PackageTypeHandler.GetContentToPack(System.IO.Abstractions.IDirectoryInfo)">
            <summary>
            Get Content To pack
            </summary>
            <param name="packageOutputDir">The pack directory.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PackageTypeHandler.CopyInstallDependencies(System.IO.Abstractions.IDirectoryInfo)">
            <summary>
            Copies the install dependencies.
            </summary>
            <param name="packageOutputDir">The package output dir.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PackageTypeHandler.Bump(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Bumps the specified version.
            </summary>
            <param name="version">The version.</param>
            <param name="buildNr">The version for build Nr.</param>
            <param name="bumpInformation">The bump information.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PackageTypeHandler.Build">
            <summary>
            Builds this instance.
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PackageTypeHandler.Pack(System.IO.Abstractions.IDirectoryInfo,System.IO.Abstractions.IDirectoryInfo)">
            <summary>
            Packs the specified package output dir.
            </summary>
            <param name="packageOutputDir">The package output dir.</param>
            <param name="outputDir">The output dir.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.PresentationPackageTypeHandler">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Handlers.PackageTypeHandler" />
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PresentationPackageTypeHandler.GeneratePresentationConfigFile(System.IO.Abstractions.IDirectoryInfo)">
            <summary>
            Generates the presentation configuration file.
            </summary>
            <param name="packageOutputDir">The package output dir.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PresentationPackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.PresentationPackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PresentationPackageTypeHandler.Bump(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Bumps the specified version.
            </summary>
            <param name="version">The version.</param>
            <param name="buildNr">The version for build Nr.</param>
            <param name="bumpInformation">The bump information.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.PresentationPackageTypeHandler.Pack(System.IO.Abstractions.IDirectoryInfo,System.IO.Abstractions.IDirectoryInfo)">
            <summary>
            Packs the specified package output dir.
            </summary>
            <param name="packageOutputDir">The package output dir.</param>
            <param name="outputDir">The output dir.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.ReportingPackageTypeHandler">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Handlers.PackageTypeHandler" />
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.ReportingPackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.ReportingPackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.RootPackageTypeHandler">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Handlers.PackageTypeHandler" />
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.RootPackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.RootPackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Handlers.TestPackageTypeHandler">
             <summary>
            
             </summary>
             <seealso cref="T:Cmf.Common.Cli.Handlers.PackageTypeHandler" />
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.TestPackageTypeHandler.GenerateDeploymentFrameworkManifest(System.IO.Abstractions.IDirectoryInfo)">
            <summary>
            Generates the deployment framework manifest.
            </summary>
            <param name="packageOutputDir">The package output dir.</param>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException"></exception>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.TestPackageTypeHandler.#ctor(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Handlers.TestPackageTypeHandler" /> class.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Handlers.TestPackageTypeHandler.Bump(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Bumps the specified CMF package.
            </summary>
            <param name="version">The version.</param>
            <param name="buildNr">The version for build Nr.</param>
            <param name="bumpInformation">The bump information.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Interfaces.IPackageTypeHandler">
             <summary>
            
             </summary>
        </member>
        <member name="P:Cmf.Common.Cli.Interfaces.IPackageTypeHandler.DefaultContentToIgnore">
            <summary>
            Gets or sets the default content to ignore.
            </summary>
            <value>
            The default content to ignore.
            </value>
        </member>
        <member name="M:Cmf.Common.Cli.Interfaces.IPackageTypeHandler.Bump(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Bumps the specified version.
            </summary>
            <param name="version">The version.</param>
            <param name="buildNr">The version for build Nr.</param>
            <param name="bumpInformation">The bump information.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Interfaces.IPackageTypeHandler.Build">
            <summary>
            Builds this instance.
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Interfaces.IPackageTypeHandler.Pack(System.IO.Abstractions.IDirectoryInfo,System.IO.Abstractions.IDirectoryInfo)">
            <summary>
            Packs the specified package output dir.
            </summary>
            <param name="packageOutputDir">The package output dir.</param>
            <param name="outputDir">The output dir.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Log">
             <summary>
            
             </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Log.Level">
            <summary>
            The level
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Log.Debug(System.String)">
            <summary>
            Debugs the specified MSG.
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Log.Verbose(System.String)">
            <summary>
            Verboses the specified MSG.
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Log.Information(System.String)">
            <summary>
            Informations the specified MSG.
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Log.Warning(System.String)">
            <summary>
            Warnings the specified MSG.
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Log.Error(System.String)">
            <summary>
            Errors the specified MSG.
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Log.Progress(System.String,System.Boolean)">
            <summary>
            Logs the progress of an operation, single line with a spinner
            TODO: this needs a better API and implementation, it's a mess
            </summary>
            <param name="msg">message to print</param>
            <param name="end">should stop the spinner and clear the console line</param>
        </member>
        <member name="M:Cmf.Common.Cli.Log.Write(System.String)">
            <summary>
            Writes the specified MSG.
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="T:Cmf.Common.Cli.LogLevel">
             <summary>
            
             </summary>
        </member>
        <member name="F:Cmf.Common.Cli.LogLevel.Debug">
            <summary>
            The debug
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.LogLevel.Verbose">
            <summary>
            The verbose
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.LogLevel.Information">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.LogLevel.Warning">
            <summary>
            The warning
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.LogLevel.Error">
            <summary>
            The error
            </summary>
        </member>
        <member name="T:Cmf.Common.Cli.Objects.CmfPackage">
             <summary>
            
             </summary>
             <seealso cref="!:System.IEquatable&lt;Cmf.Common.Cli.Objects.CmfPackage&gt;" />
        </member>
        <member name="F:Cmf.Common.Cli.Objects.CmfPackage.FileInfo">
            <summary>
            The file information
            </summary>
        </member>
        <member name="F:Cmf.Common.Cli.Objects.CmfPackage.IsToSetDefaultValues">
            <summary>
            The skip set default values
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.PackageName">
            <summary>
            Gets the name of the package.
            </summary>
            <value>
            The name of the package.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.ZipPackageName">
            <summary>
            Gets the name of the zip package.
            </summary>
            <value>
            The name of the zip package.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.PackageId">
            <summary>
            Gets or sets the package identifier.
            </summary>
            <value>
            The package identifier.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.PackageType">
            <summary>
            Gets or sets the type of the package.
            </summary>
            <value>
            The type of the package.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.TargetDirectory">
            <summary>
            Gets or sets the target directory.
            </summary>
            <value>
            The target directory.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.IsInstallable">
            <summary>
            Gets or sets a value indicating whether this instance is installable.
            </summary>
            <value>
              <c>true</c> if this instance is installable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.IsUniqueInstall">
            <summary>
            Gets or sets the is unique install.
            </summary>
            <value>
            The is unique install.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.Keywords">
            <summary>
            Gets or sets the is root package.
            </summary>
            <value>
            The is root package.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.IsToSetDefaultSteps">
            <summary>
            Gets or sets the set default steps.
            </summary>
            <value>
            The set default steps.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.Dependencies">
            <summary>
            Gets or sets the dependencies.
            </summary>
            <value>
            The dependencies.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.Steps">
            <summary>
            Gets or sets the steps.
            </summary>
            <value>
            The steps.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.ContentToPack">
            <summary>
            Gets or sets the content to pack.
            </summary>
            <value>
            The content to pack.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.XmlInjection">
            <summary>
            Gets or sets the deployment framework UI file.
            </summary>
            <value>
            The deployment framework UI file.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.TestPackages">
            <summary>
            Gets or sets the Test Package Id.
            </summary>
            <value>
            The Test Package Id.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.CmfPackage.Location">
            <summary>
            The location of the package
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.ValidatePackage">
            <summary>
            Validates the package.
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.#ctor(System.String,System.String,System.String,System.String,Cmf.Common.Cli.Enums.PackageType,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},Cmf.Common.Cli.Objects.DependencyCollection,System.Collections.Generic.List{Cmf.Common.Cli.Objects.Step},System.Collections.Generic.List{Cmf.Common.Cli.Objects.ContentToPack},System.Collections.Generic.List{System.String},Cmf.Common.Cli.Objects.DependencyCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Objects.CmfPackage"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="packageId">The package identifier.</param>
            <param name="version">The version.</param>
            <param name="description">The description.</param>
            <param name="packageType">Type of the package.</param>
            <param name="targetDirectory">The target directory.</param>
            <param name="isInstallable">The is installable.</param>
            <param name="isUniqueInstall">The is unique install.</param>
            <param name="keywords">The keywords.</param>
            <param name="isToSetDefaultSteps">The is to set default steps.</param>
            <param name="dependencies">The dependencies.</param>
            <param name="steps">The steps.</param>
            <param name="contentToPack">The content to pack.</param>
            <param name="xmlInjection">The XML injection.</param>
            <param name="testPackages">The test Packages.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.#ctor">
            <summary>
            initialize an empty CmfPackage
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.#ctor(System.IO.Abstractions.IFileSystem)">
            <summary>
            Initialize an empty CmfPackage with a specific file system
            </summary>
            <param name="fileSystem"></param>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.Equals(Cmf.Common.Cli.Objects.CmfPackage)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.GetFileInfo">
            <summary>
            Gets or sets the file information.
            </summary>
            <returns>
            The file information.
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.SetFileInfo(System.IO.Abstractions.IFileInfo)">
            <summary>
            Gets or sets the file information.
            </summary>
            <param name="value">The file information.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.SetDefaultValues(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Collections.Generic.List{Cmf.Common.Cli.Objects.Step})">
            <summary>
            Sets the defaults.
            </summary>
            <param name="name">The name.</param>
            <param name="targetDirectory">The target directory.</param>
            <param name="isInstallable">The is installable.</param>
            <param name="isUniqueInstall">The is unique install.</param>
            <param name="keywords">The keywords.</param>
            <param name="steps">The steps.</param>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException"></exception>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.SetVersion(System.String)">
            <summary>
            Sets the version.
            </summary>
            <param name="version">The version.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.LoadDependencies(System.String,System.Boolean)">
            <summary>
            Builds a dependency tree by attaching the CmfPackage objects to the parent's dependencies
            Can run recursively and fetch packages from a DF repository.
            Supports cycles
            </summary>
            <param name="repo">the address of the repository (currently only folders are supported)</param>
            <param name="recurse">should we run recursively</param>
            <returns>this CmfPackage for chaining, but the method itself is mutable</returns>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.Load(System.IO.Abstractions.IFileInfo,System.Boolean,System.IO.Abstractions.IFileSystem)">
            <summary>
            Loads the specified file.
            </summary>
            <param name="file">The file.</param>
            <param name="setDefaultValues"></param>
            <param name="fileSystem">the underlying file system</param>
            <returns></returns>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException">
            </exception>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException"></exception>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.FromManifest(System.String,System.Boolean,System.IO.Abstractions.IFileSystem)">
            <summary>
            Create a CmfPackage object from a DF package manifest
            </summary>
            <param name="manifest">the manifest content</param>
            <param name="setDefaultValues">should set default values</param>
            <param name="fileSystem">the underlying file system</param>
            <returns>a CmfPackage</returns>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.IsRootPackage">
            <summary>
            Determines whether [is root package].
            </summary>
            <returns>
              <c>true</c> if [is root package] [the specified CMF package]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.SaveCmfPackage">
            <summary>
            Saves the CMF package.
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.Equals(System.Object)">
            <summary>
            Equalses the specified object.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackage.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Cmf.Common.Cli.Objects.CmfPackageCollection">
             <summary>
            
             </summary>
             <seealso cref="!:System.Collections.Generic.List&lt;Objects.CmfPackage&gt;" />
        </member>
        <member name="M:Cmf.Common.Cli.Objects.CmfPackageCollection.GetDependency(Cmf.Common.Cli.Objects.Dependency)">
            <summary>
            Gets the dependency.
            </summary>
            <param name="dependency">The dependency.</param>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Objects.ContentToPack">
             <summary>
            
             </summary>
             <seealso cref="!:System.IEquatable&lt;Cmf.Common.Cli.Objects.ContentToPack&gt;" />
        </member>
        <member name="P:Cmf.Common.Cli.Objects.ContentToPack.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.ContentToPack.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.ContentToPack.IgnoreFiles">
            <summary>
            Gets or sets the ignore file.
            </summary>
            <value>
            The ignore file.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.ContentToPack.Action">
            <summary>
            Gets or sets the action to be applied to the content
            Default is "pack"
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.ContentToPack.ContentType">
            <summary>
            Gets or sets the type of the content.
            Default value = Generic
            </summary>
            <value>
            The type of the content.
            </value>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.ContentToPack.Equals(Cmf.Common.Cli.Objects.ContentToPack)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:Cmf.Common.Cli.Objects.Dependency">
             <summary>
            
             </summary>
             <seealso cref="T:System.IEquatable`1" />
        </member>
        <member name="P:Cmf.Common.Cli.Objects.Dependency.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.Dependency.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.Dependency.Mandatory">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Cmf.Common.Cli.Objects.Dependency" /> is mandatory.
            </summary>
            <value>
              <c>true</c> if mandatory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.Dependency.CmfPackage">
            <summary>
            The CmfPackage that satisfies this dependency
            </summary>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.Dependency.IsMissing">
            <summary>
            Is this package missing, i.e. we could not find it anywhere to satisfy this dependency
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.Dependency.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Objects.Dependency" /> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="version">The version.</param>
            <exception cref="T:System.ArgumentNullException">id
            or
            version</exception>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.Dependency.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Objects.Dependency" /> class.
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.Dependency.Equals(Cmf.Common.Cli.Objects.Dependency)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:Cmf.Common.Cli.Objects.DependencyCollection">
             <summary>
            
             </summary>
             <seealso cref="!:System.Collections.Generic.List&lt;Cmf.Common.Cli.Objects.Dependency&gt;" />
        </member>
        <member name="M:Cmf.Common.Cli.Objects.DependencyCollection.Contains(Cmf.Common.Cli.Objects.Dependency)">
            <summary>
            Gets the dependency.
            </summary>
            <param name="dependency">The dependency.</param>
            <returns>
              <c>true</c> if [contains] [the specified dependency]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.DependencyCollection.Contains(Cmf.Common.Cli.Objects.Dependency,System.Boolean)">
            <summary>
            Determines whether this instance contains the object.
            </summary>
            <param name="dependency">The dependency.</param>
            <param name="ignoreVersion">if set to <c>true</c> [ignore version].</param>
            <returns>
              <c>true</c> if [contains] [the specified dependency]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Cmf.Common.Cli.Objects.FileToPack">
             <summary>
            
             </summary>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.FileToPack.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.FileToPack.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.FileToPack.ContentToPack">
            <summary>
            Gets or sets the content to pack.
            </summary>
            <value>
            The content to pack.
            </value>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.FileToPack.#ctor(System.IO.Abstractions.IFileInfo,System.IO.Abstractions.IFileInfo,Cmf.Common.Cli.Objects.ContentToPack)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Objects.FileToPack"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="contentToPack">The content to pack.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.FileToPack.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Objects.FileToPack"/> class.
            </summary>
        </member>
        <member name="T:Cmf.Common.Cli.Objects.Step">
             <summary>
            
             </summary>
             <seealso cref="!:System.IEquatable&lt;Cmf.Common.Cli.Objects.Step&gt;" />
        </member>
        <member name="P:Cmf.Common.Cli.Objects.Step.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.Step.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.Step.OnExecute">
            <summary>
            Gets or sets the on execute.
            </summary>
            <value>
            The on execute.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.Step.ContentPath">
            <summary>
            Gets or sets the content path.
            </summary>
            <value>
            The content path.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.Step.File">
            <summary>
            Gets or sets the file.
            </summary>
            <value>
            The file.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.Step.TagFile">
            <summary>
            Gets or sets a value indicating whether [tag file].
            </summary>
            <value>
              <c>true</c> if [tag file]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.Step.TargetDatabase">
            <summary>
            Gets or sets the target database.
            </summary>
            <value>
            The target database.
            </value>
        </member>
        <member name="P:Cmf.Common.Cli.Objects.Step.MessageType">
            <summary>
            Gets or sets the type of the message.
            </summary>
            <value>
            The type of the message.
            </value>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.Step.#ctor(System.Nullable{Cmf.Common.Cli.Enums.StepType},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Cmf.Common.Cli.Enums.MessageType})">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Objects.Step" /> class.
            </summary>
            <param name="type">The type.</param>
            <param name="title">The title.</param>
            <param name="onExecute">The on execute.</param>
            <param name="contentPath">The content path.</param>
            <param name="file">The file.</param>
            <param name="tagFile">The tag file.</param>
            <param name="targetDatabase">The target database.</param>
            <param name="messageType">Type of the message.</param>
            <exception cref="T:System.ArgumentNullException">type</exception>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.Step.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Objects.Step" /> class.
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.Step.#ctor(System.Nullable{Cmf.Common.Cli.Enums.StepType})">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Objects.Step" /> class.
            </summary>
            <param name="type">The type.</param>
            <exception cref="T:System.ArgumentNullException">type</exception>
        </member>
        <member name="M:Cmf.Common.Cli.Objects.Step.Equals(Cmf.Common.Cli.Objects.Step)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:Cmf.Common.Cli.Program">
            <summary>
            program entry point
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Program.Main(System.String[])">
            <summary>
            program entry point
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Utilities.CliException">
             <summary>
            
             </summary>
             <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.CliException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Utilities.CliException"/> class.
            </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.CliException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Utilities.CliException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.CliException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Utilities.CliException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.CliException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Cmf.Common.Cli.Utilities.CliException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Cmf.Common.Cli.Utilities.ExtensionMethods">
             <summary>
            
             </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.ExtensionMethods.HasAny``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether a sequence contains any elements.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <returns>
              <c>true</c> if the specified source has any; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.ExtensionMethods.Has(System.Collections.Generic.IEnumerable{System.Object},System.Object)">
            <summary>
            Determines whether [has] [the specified object].
            </summary>
            <param name="objects">The objects.</param>
            <param name="obj">The object.</param>
            <returns>
              <c>true</c> if [has] [the specified object]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.ExtensionMethods.GetPropertyValueFromTokenName(System.Object,System.String)">
            <summary>
            Gets the name of the property value from token.
            </summary>
            <param name="obj">The object.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.ExtensionMethods.IgnoreCaseEquals(System.String,System.String)">
            <summary>
            Ignores the case equals.
            </summary>
            <param name="str">The string.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.ExtensionMethods.LoadCmfPackagesFromSubDirectories(System.IO.Abstractions.IDirectoryInfo,Cmf.Common.Cli.Enums.PackageType,System.Boolean)">
            <summary>
            Gets the CMF package files from sub directories.
            </summary>
            <param name="directory">The directory.</param>
            <param name="packageType">Type of the package.</param>
            <param name="setDefaultValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.ExtensionMethods.IsNullOrEmpty(System.Object)">
            <summary>
            Determines whether [is null or empty].
            </summary>
            <param name="obj">The object.</param>
            <returns>
              <c>true</c> if [is null or empty] [the specified object]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.ExtensionMethods.IsList(System.Object)">
            <summary>
            Determines whether this instance is list.
            </summary>
            <param name="obj">The object.</param>
            <returns>
              <c>true</c> if the specified object is list; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.ExtensionMethods.Element(System.Xml.Linq.XContainer,System.Xml.Linq.XName,System.Boolean)">
            <summary>
            Gets the first (in document order) child element with the specified <see cref="T:System.Xml.Linq.XName" />.
            </summary>
            <param name="element">The element.</param>
            <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
            <param name="ignoreCase">If set to <c>true</c> case will be ignored whilst searching for the <see cref="T:System.Xml.Linq.XElement" />.</param>
            <returns>
            A <see cref="T:System.Xml.Linq.XElement" /> that matches the specified <see cref="T:System.Xml.Linq.XName" />, or null.
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.ExtensionMethods.GetPackageJsonFile(System.IO.Abstractions.IDirectoryInfo)">
            <summary>
            Gets the package json file.
            </summary>
            <param name="packDirectory">The pack directory.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.ExtensionMethods.ToCamelCase(System.String)">
            <summary>
            Converts to camelcase.
            </summary>
            <param name="str">The string.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.ExtensionMethods.IsDirectory(System.Uri)">
            <summary>
            Determines whether this instance is directory.
            </summary>
            <param name="uri">The URI.</param>
            <returns>
              <c>true</c> if the specified URI is directory; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.ExtensionMethods.IsToken(System.String)">
            <summary>
            Determines whether the specified value is token.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is token; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.ExtensionMethods.GetTokenName(System.String)">
            <summary>
            Gets the name of the token.
            </summary>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Utilities.FileSystemUtilities">
             <summary>
            
             </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.GetFilesToPack(Cmf.Common.Cli.Objects.ContentToPack,System.String,System.String,System.IO.Abstractions.IFileSystem,System.Collections.Generic.List{System.String},System.Boolean,System.Boolean,System.Collections.Generic.List{Cmf.Common.Cli.Objects.FileToPack})">
            <summary>
            Gets the files to pack.
            </summary>
            <param name="contentToPack">The content to pack.</param>
            <param name="sourceDirName">Name of the source dir.</param>
            <param name="destDirName">Name of the dest dir.</param>
            <param name="contentToIgnore">The content to ignore.</param>
            <param name="copySubDirs">if set to <c>true</c> [copy sub dirs].</param>
            <param name="isCopyDependencies">if set to <c>true</c> [is copy dependencies].</param>
            <param name="filesToPack">The files to pack.</param>
            <param name="fileSystem">the underlying file system</param>
            <returns></returns>
            <exception cref="T:System.IO.DirectoryNotFoundException">$"Source directory does not exist or could not be found: {sourceDirName}</exception>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.CopyDirectory(System.String,System.String,System.IO.Abstractions.IFileSystem,System.Collections.Generic.List{System.String},System.Boolean,System.Boolean)">
            <summary>
            Directories copy.
            </summary>
            <param name="sourceDirName">Name of the source dir.</param>
            <param name="destDirName">Name of the dest dir.</param>
            <param name="contentToIgnore">The exclusions.</param>
            <param name="copySubDirs">if set to <c>true</c> [copy sub dirs].</param>
            <param name="isCopyDependencies">if set to <c>true</c> [is copy dependencies].</param>
            <param name="fileSystem">the underlying file system</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Source directory does not exist or could not be found: "
            + sourceDirName</exception>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.ReadToString(System.IO.Abstractions.IFileInfo)">
            <summary>
            Reads to string.
            </summary>
            <param name="fi">The fi.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.ReadToStringList(System.IO.Abstractions.IFileInfo)">
            <summary>
            Reads to string list.
            </summary>
            <param name="fi">The fi.</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.GetPackageRoot(System.IO.Abstractions.IFileSystem)">
            <summary>
            Gets the package root.
            </summary>
            <returns></returns>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException">Cannot find package root. Are you in a valid package directory?</exception>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.GetProjectRoot(System.IO.Abstractions.IFileSystem,System.Boolean)">
            <summary>
            Gets the project root.
            </summary>
            <returns></returns>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException">Cannot find project root. Are you in a valid project directory?</exception>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException">Cannot find project root. Are you in a valid project directory?</exception>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.GetPackageRootByType(System.String,Cmf.Common.Cli.Enums.PackageType,System.IO.Abstractions.IFileSystem)">
            <summary>
            Gets the package root of type package root.
            </summary>
            <param name="directoryName">Name of the directory.</param>
            <param name="packageType">Type of the package.</param>
            <param name="fileSystem">the underlying file system</param>
            <returns></returns>
            <exception cref="T:Cmf.Common.Cli.Utilities.CliException">Cannot find project root. Are you in a valid project directory?</exception>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.ReadEnvironmentConfig(System.String,System.IO.Abstractions.IFileSystem)">
            <summary>
            Reads the environment configuration.
            </summary>
            <param name="envConfigName">Name of the env configuration.</param>
            <param name="fileSystem">the underlying file system</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.ReadProjectConfig(System.IO.Abstractions.IFileSystem)">
            <summary>
            Reads the project configuration.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.CopyStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies the contents of input to output. Doesn't close either stream.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.CopyInstallDependenciesFiles(System.IO.Abstractions.IDirectoryInfo,Cmf.Common.Cli.Enums.PackageType,System.IO.Abstractions.IFileSystem)">
            <summary>
            Copies the install dependencies.
            </summary>
            <param name="packageOutputDir">The package output dir.</param>
            <param name="packageType">Type of the package.</param>
            <param name="fileSystem">the underlying file system</param>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.GetOutputDir(Cmf.Common.Cli.Objects.CmfPackage,System.IO.Abstractions.IDirectoryInfo,System.Boolean)">
            <summary>
            Gets the output dir.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
            <param name="outputDir">The output dir.</param>
            <param name="force">if set to <c>true</c> [force].</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.GetPackageOutputDir(Cmf.Common.Cli.Objects.CmfPackage,System.IO.Abstractions.IDirectoryInfo,System.IO.Abstractions.IFileSystem)">
            <summary>
            Gets the package output dir.
            </summary>
            <param name="cmfPackage">The CMF package.</param>
            <param name="packageDirectory">The package directory.</param>
            <param name="fileSystem">the underlying file system</param>
            <returns></returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.FileSystemUtilities.GetManifestFromPackage(System.String)">
            <summary>
            Get Manifest File From package
            </summary>
            <param name="packageFile"></param>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Utilities.GenericUtilities">
             <summary>
            
             </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.GenericUtilities.GetEmbeddedResourceContent(System.String)">
            <summary>
            Read Embedded Resource file content and return it.
            e.g. GetEmbeddedResourceContent("BuildScrips/cleanNodeModules.ps1")
            NOTE: Don't forget to set the BuildAction for your resource as EmbeddedResource. Resources must be in the [root]/resources folder
            </summary>
            <param name="resourceName">the path of the embedded resource inside the [root}/resources folder</param>
            <returns>
            the resource content
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.GenericUtilities.RetrieveNewVersion(System.String,System.String,System.String)">
            <summary>
            Will create a new version based on the old and new inputs
            </summary>
            <param name="currentVersion"></param>
            <param name="version"></param>
            <param name="buildNr"></param>
            <returns>
            the new version
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.GenericUtilities.RetrieveNewPresentationVersion(System.String,System.String,System.String)">
            <summary>
            Will create a new version based on the old and new inputs
            </summary>
            <param name="currentVersion"></param>
            <param name="version"></param>
            <param name="buildNr"></param>
            <returns>
            the new version
            </returns>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.GenericUtilities.GetCurrentPresentationVersion(System.String,System.String@,System.String@)">
            <summary>
            Get current version based on string, for 
            the format 1.0.0-1234
            where 1.0.0 will be the version
            and the 1234 will be the build number
            </summary>
            <param name="source">Source information to be parsed</param>
            <param name="version">Version Number</param>
            <param name="buildNr">Build Number</param>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.GenericUtilities.GetPackageFromRepository(System.IO.Abstractions.IDirectoryInfo,System.Uri,System.Boolean,System.String,System.String,System.IO.Abstractions.IFileSystem)">
            <summary>
            Get Package from Repository
            </summary>
            <param name="outputDir">Target directory for the package</param>
            <param name="repoUri">Repository Uri</param>
            <param name="force"></param>
            <param name="packageId">Package Identifier</param>
            <param name="packageVersion">Package Version</param>
            <param name="fileSystem">the underlying file system</param>
            <returns></returns>
        </member>
        <member name="T:Cmf.Common.Cli.Utilities.IoTUtilities">
             <summary>
            
             </summary>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.IoTUtilities.BumpWorkflowFiles(System.String,System.String,System.String,System.String,System.String,System.IO.Abstractions.IFileSystem)">
            <summary>
            Bumps the workflow files.
            </summary>
            <param name="group">The group.</param>
            <param name="version">The version.</param>
            <param name="buildNr">The version of the build (v-b).</param>
            <param name="workflowName">Name of the workflow.</param>
            <param name="packageNames">The package names.</param>
            <param name="fileSystem">the underlying file system</param>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.IoTUtilities.BumpIoTMasterData(System.String,System.String,System.String,System.IO.Abstractions.IFileSystem,System.String,System.Boolean)">
            <summary>
            Bumps the io t master data.
            </summary>
            <param name="automationWorkflowFileGroup">The automation workflow file group.</param>
            <param name="version">The version.</param>
            <param name="buildNr">The version of the build (v-b).</param>
            <param name="packageNames">The package names.</param>
            <param name="onlyCustomization">if set to <c>true</c> [only customization].</param>
            <param name="fileSystem">the underlying file system</param>
        </member>
        <member name="M:Cmf.Common.Cli.Utilities.IoTUtilities.BumpIoTCustomPackages(System.String,System.String,System.String,System.String,System.IO.Abstractions.IFileSystem)">
            <summary>
            Bumps the iot custom packages.
            </summary>
            <param name="packagePath">The package path.</param>
            <param name="version">The version.</param>
            <param name="buildNr">The version of the build (v-b).</param>
            <param name="packageNames">The package names.</param>
            <param name="fileSystem">the underlying file system</param>
        </member>
    </members>
</doc>
